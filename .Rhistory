ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 10) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 5) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 10) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 100) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 50) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 5) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 500) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 250) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 300) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 1000) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 500) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 100) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 2000) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 1000) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 750) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 500) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 100) +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 500) +
ggtitle("Number of Ratings per Movie")
average_ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(av_rating = mean(rating))
ggplot(average_ratings_per_movie, aes(x=av_rating)) +
geom_histogram(binwidth = 0.5) +
ggtitle("Average Rating For Each Movie")
# Show all unique movie titles using base R
unique_movie_titles <- unique(data_csv$movie_title)
# Show all unique movie titles using base R
unique_movie_titles <- unique(mlData$movie_title)
print(unique_movie_titles)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data_csv <- read.csv("unifiedMLDataMulti.csv")
library(readr)
data_csv <- read.csv('https://raw.githubusercontent.com/dnchari/DS501_MovieLens/master/Results/unifiedMLDataMulti.csv')
library(readr)
da = 'https://raw.githubusercontent.com/dnchari/DS501_MovieLens/master/Results/unifiedMLDataMulti.csv'
data_csv <- read.csv(da)
library(plotly)
install.packages('plotly')
library(plotly)
install.packages("plotly")
colnames(data_csv)
fig_movie_rates <- plot_ly(data = data_csv, x = ~movie_title, y = ~rating, type = "histogram")
library(plotly)
library(plotly)
install.packages('plotly')
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
library(plotly)
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
movielens = 'https://raw.githubusercontent.com/dnchari/DS501_MovieLens/master/Results/unifiedMLDataMulti.csv'
mlData = read.csv(movielens)
head(mlData)
library(dplyr)
over_4_5 = mlData %>%
group_by(movie_title) %>%
summarise(average_rating = mean(rating)) %>%
filter(average_rating > 4.5)
nrow(over_4_5)
over_4_5_men = mlData %>%
filter(gender == "M") %>%
group_by(movie_title) %>%
summarise(average_rating = mean(rating)) %>%
filter(average_rating > 4.5)
nrow(over_4_5_men)
over_4_5_women = mlData %>%
filter(gender == "F") %>%
group_by(movie_title) %>%
summarise(average_rating = mean(rating)) %>%
filter(average_rating > 4.5)
nrow(over_4_5_women)
over_4_5_men_over30 = mlData %>%
filter(gender == "M", age > 30) %>%
group_by(movie_title) %>%
summarise(average_rating = mean(rating)) %>%
filter(average_rating > 4.5)
nrow(over_4_5_men_over30)
over_4_5_women_over30 = mlData %>%
filter(gender == "F", age > 30) %>%
group_by(movie_title) %>%
summarise(average_rating = mean(rating)) %>%
filter(average_rating > 4.5)
nrow(over_4_5_women_over30)
most_popular = mlData %>%
group_by(movie_title) %>%
summarise(number_of_ratings = n()) %>%
arrange(desc(number_of_ratings)) %>%
head(10)
most_popular
artists_writers_combined = mlData %>%
filter(occupation %in% c("artist", "writer", "entertainment")) %>%
summarise(average_rating = mean(rating))
artists_writers_combined
non_artists_writers_combined = mlData %>%
filter(!(occupation %in% c("artist", "writer", "entertainment"))) %>%
summarise(average_rating = mean(rating))
non_artists_writers_combined
library(ggplot2)
ggplot(mlData, aes(x=rating)) +
geom_histogram(binwidth=0.5, fill = "blue", color = "black") +
ggtitle("Histogram of All Movie Ratings")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
average_ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(av_rating = mean(rating))
ggplot(average_ratings_per_movie, aes(x=av_rating)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
ggtitle("Average Rating For Each Movie")
average_ratings_over_100 = ratings_per_movie %>%
filter(num_ratings > 100) %>%
left_join(average_ratings_per_movie, by="movie_title")
ggplot(average_ratings_over_100, aes(x=av_rating)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black"
) +
ggtitle("Average Rating for Movies Rated More Than 100 Times")
#average ratings for movies rated more than 100 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n(), average_rating = mean(rating)) %>%
filter(num_ratings > 100)
#average ratings for movies rated fewer than 100 times
less_popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n(), average_rating = mean(rating)) %>%
filter(num_ratings <= 100)
#plot1
ggplot(popular_movies, aes(x = average_rating)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
ggtitle("Average Ratings of Movies Rated More Than 100 Times") +
xlab("Average Rating")
#plot2
ggplot(less_popular_movies, aes(x = average_rating)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
ggtitle("Average Ratings of Movies Rated Fewer Than 100 Times") +
xlab("Average Rating")
# Group by movie title and gender, calculate average ratings for each gender
men_vs_women = mlData %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
library(tidyr)
# Group by movie title and gender, calculate average ratings for each gender
men_vs_women = mlData %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
# Scatter plot: Men vs. Women average ratings
ggplot(men_vs_women, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Every Movie") +
xlab("Men's Average Rating") +
ylab("Women's Average Rating") +
geom_smooth(method = "lm", se = FALSE, color = "red")
# Find movies rated more than 200 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n()) %>%
filter(num_ratings > 200)
# Filter original data for movies rated more than 200 times
men_vs_women_popular = mlData %>%
filter(movie_title %in% popular_movies$movie_title) %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
# Scatter plot: Men vs. Women average ratings for popular movies
ggplot(men_vs_women_popular, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Movies Rated Over 200 Times") +
xlab("Men's Average Rating") +
ylab("Women's Average Rating") +
geom_smooth(method = "lm", se = FALSE, color = "red")
# Compute correlation for all movies
cor_all_movies = cor(men_vs_women$M, men_vs_women$F, use = "complete.obs")
# Compute correlation for movies rated more than 200 times
cor_popular_movies = cor(men_vs_women_popular$M, men_vs_women_popular$F, use = "complete.obs")
# Output results
cor_all_movies
cor_popular_movies
#average ratings for movies rated more than 100 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n(), average_rating = mean(rating)) %>%
filter(num_ratings > 100)
#average ratings for movies rated fewer than 100 times
less_popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n(), average_rating = mean(rating)) %>%
filter(num_ratings <= 100)
#plot1
ggplot(popular_movies, aes(x = average_rating)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
ggtitle("Average Ratings of Movies Rated More Than 100 Times") +
xlab("Average Rating")
#plot2
ggplot(less_popular_movies, aes(x = average_rating)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
ggtitle("Average Ratings of Movies Rated Fewer Than 100 Times") +
xlab("Average Rating")
library(tidyr)
#data
men_vs_women = mlData %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
ggplot(men_vs_women, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Every Movie") +
xlab("Men's Average Rating") +
ylab("Women's Average Rating") +
geom_smooth(method = "lm", se = FALSE, color = "red")
library(tidyr)
#data
men_vs_women = mlData %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
ggplot(men_vs_women, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Every Movie") +
xlab("Men's Average Rating") +
ylab("Women's Average Rating") +
geom_smooth(method = "lm", se = FALSE, color = "red")
#movies rated more than 200 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n()) %>%
filter(num_ratings > 200)
#data for movies rated more than 200 times
men_vs_women_popular = mlData %>%
filter(movie_title %in% popular_movies$movie_title) %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE)) %>%
spread(gender, average_rating)
ggplot(men_vs_women_popular, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Movies Rated Over 200 Times") +
xlab("Men's Average Rating") +
ylab("Women's Average Rating") +
geom_smooth(method = "lm", se = FALSE, color = "red")
#correlation for all movies
cor_all_movies = cor(men_vs_women$M, men_vs_women$F, use = "complete.obs")
#correlation for movies rated more than 200 times
cor_popular_movies = cor(men_vs_women_popular$M, men_vs_women_popular$F, use = "complete.obs")
cor_all_movies
cor_popular_movies
#movies rated more than 200 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n()) %>%
filter(num_ratings > 200)
#men vs women
men_vs_women = mlData %>%
filter(movie_title %in% popular_movies$movie_title) %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating)) %>%
spread(gender, average_rating)
#plot
ggplot(men_vs_women, aes(x = M, y = F)) +
geom_point(color = "blue") +
ggtitle("Mean Ratings: Men vs. Women for Popular Movies") +
geom_smooth(method = "lm", se = FALSE, color = "red")
#correlation
cor(men_vs_women$M, men_vs_women$F, use = "complete.obs")
ggplot(mlData, aes(x=rating)) +
geom_histogram(binwidth=0.5, fill = "blue", color = "black") +
ggtitle("Histogram of All Movie Ratings")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 2.5, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
ratings_per_movie = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n())
ggplot(ratings_per_movie, aes(x=num_ratings)) +
geom_histogram(binwidth = 200, fill = "blue", color = "black") +
ggtitle("Number of Ratings per Movie")
average_ratings_over_100 = ratings_per_movie %>%
filter(num_ratings > 100) %>%
left_join(average_ratings_per_movie, by="movie_title")
ggplot(average_ratings_over_100, aes(x=av_rating)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black"
) +
ggtitle("Average Rating for Movies Rated More Than 100 Times")
average_ratings_over_100 = ratings_per_movie %>%
filter(num_ratings > 100) %>%
left_join(average_ratings_per_movie, by="movie_title")
ggplot(average_ratings_over_100, aes(x=av_rating)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black"
) +
ggtitle("Average Rating for Movies Rated More Than 100 Times")
#movies rated more than 200 times
popular_movies = mlData %>%
group_by(movie_title) %>%
summarise(num_ratings = n()) %>%
filter(num_ratings > 200)
#men vs women
men_vs_women = mlData %>%
filter(movie_title %in% popular_movies$movie_title) %>%
group_by(movie_title, gender) %>%
summarise(average_rating = mean(rating)) %>%
spread(gender, average_rating)
#correlation
cor(men_vs_women$M, men_vs_women$F, use = "complete.obs")
# Calculate average ratings by genre and gender
genre_gender_ratings <- mlData %>%
group_by(genre, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE))
# Create box plot
ggplot(genre_gender_ratings, aes(x = genre, y = average_rating, fill = gender)) +
geom_boxplot() +
ggtitle("Average Ratings by Genre and Gender") +
xlab("Genre") +
ylab("Average Rating") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
over_4_5_men_over30 = mlData %>%
filter(gender == "M", age > 30) %>%
group_by(movie_title) %>%
summarise(median_rating = median(rating)) %>%
filter(median_rating > 4.5)
nrow(over_4_5_men_over30)
#average ratings by genre and gender
genre_gender_ratings <- mlData %>%
group_by(genre, gender) %>%
summarise(average_rating = mean(rating, na.rm = TRUE))
ggplot(genre_gender_ratings, aes(x = genre, y = average_rating, fill = gender)) +
geom_col(position = "dodge") +  # "dodge" puts bars side by side for each gender
ggtitle("Average Ratings by Genre and Gender") +
xlab("Genre") +
ylab("Average Rating") +
theme_minimal()
#average ratings by genre and gender
genre_ratings <- mlData %>%
group_by(genre) %>%
summarise(average_rating = mean(rating, na.rm = TRUE))
ggplot(genre_ratings, aes(x = genre, y = average_rating, fill = genre)) +
geom_col() +  # Bar plot where the height of each bar represents the average rating
ggtitle("Average Ratings by Genre") +
xlab("Genre") +
ylab("Average Rating")
over_4_5_women_over30 = mlData %>%
filter(gender == "F", age > 30) %>%
group_by(movie_title) %>%
summarise(median_rating = median(rating)) %>%
filter(median_rating > 4.5)
nrow(over_4_5_women_over30)
knitr::opts_chunk$set(echo = TRUE)
healthAndDems = 'C:\Users\chris\Downloads\Life_Expectancy_Data.csv'
healthAndDems = 'Users\chris\Downloads\Life_Expectancy_Data.csv'
healthAndDems = 'chris\Downloads\Life_Expectancy_Data.csv'
healthAndDems = 'chris/Downloads/Life_Expectancy_Data.csv'
healthData = read.csv(healthAndDems)
healthAndDems = 'Life_Expectancy_Data.csv'
healthData = read.csv(healthAndDems)
healthAndDems <- "C:/Users/chris/Downloads/Life_Expectancy_Data.csv"
healthData <- read.csv(healthAndDems)
head(healthData)
healthAndDems = "C:/Users/chris/Downloads/Life_Expectancy_Data.csv"
healthData = read.csv(healthAndDems)
head(healthData)
library(shiny)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(shiny)
data <- read.csv("C:/Users/chris/ShinyApp/Life_Expectancy_Data.csv")
head(data)
regression_data <- data %>%
select(Life.expectancy, Adult.Mortality, Alcohol, BMI, GDP, Schooling, Population)
model <- lm(Life.expectancy ~ Adult.Mortality + Alcohol + BMI + GDP + Schooling, data = regression_data)
summary(model)
#predict values
regression_data$Predicted_Life_Expectancy <- predict(model, regression_data)
#actual vs predicted
ggplot(regression_data, aes(x = Life.expectancy, y = Predicted_Life_Expectancy)) +
geom_point() +
geom_abline(color = "red") +
labs(title = "Actual vs Predicted Life Expectancy", x = "Actual", y = "Predicted")
install.packages('rsconnect')
library(rsconnect)
rsconnect::deployApp('C:/Users/chris/ShinyApp/DS501_HW4.Rmd')
